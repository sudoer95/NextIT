// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Tech E-commerce Database Schema

// Users table
model User {
  id            Int       @id @default(autoincrement())
  email         String    @unique
  password_hash String
  name          String?
  is_admin      Boolean   @default(false)
  created_at    DateTime  @default(now())

  orders     Order[]
  cartItems  CartItem[]
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String    @unique

  products Product[]
}

model Product {
  id           Int       @id @default(autoincrement())
  name         String
  description  String?
  price        Decimal
  image_url    String?
  stock        Int       @default(0)
  category_id  Int
  created_at   DateTime  @default(now())

  category     Category  @relation(fields: [category_id], references: [id])
  orderedItems OrderedItem[]
  cartItems    CartItem[]
}

model Order {
  id         Int       @id @default(autoincrement())
  user_id    Int
  status     String    @default("pending")
  total      Decimal
  created_at DateTime  @default(now())
  updated_at DateTime  @default(now())

  user        User       @relation(fields: [user_id], references: [id])
  orderedItems OrderedItem[]
}

model OrderedItem {
  id             Int      @id @default(autoincrement())
  order_id       Int
  product_id     Int
  quantity       Int
  price_at_order Decimal

  order   Order   @relation(fields: [order_id], references: [id])
  product Product @relation(fields: [product_id], references: [id])
}

model CartItem {
  id         Int      @id @default(autoincrement())
  user_id    Int
  product_id Int
  quantity   Int      @default(1)

  user    User    @relation(fields: [user_id], references: [id])
  product Product @relation(fields: [product_id], references: [id])

  @@unique([user_id, product_id])
}

model AdminSetting {
  id         Int      @id @default(autoincrement())
  key        String   @unique
  value      String
}
